{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "Gestor de gastos API",
    "description": "API for managing incomes and expenses"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server for development"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Authenticates a user and returns an authorization token",
        "responses": {
          "200": {
            "description": "Returns JWT token and user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "required": [
                    "token",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid password"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": "Invalid password"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "User not found"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": "Unexpected error"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "tu@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "tuContraSEÑA123!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Creates new user and returns an authorization token",
        "responses": {
          "201": {
            "description": "User successfully created and authenticated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  },
                  "required": [
                    "token",
                    "user"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "The password must be at least 8 characters long"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Email already registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Email juan.perez@email.com is already registered"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Juan Pérez"
                  },
                  "email": {
                    "type": "string",
                    "example": "juan.perez@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "Password123!"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/summary": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Returns a summary of transactions",
        "responses": {
          "200": {
            "description": "Summary of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "totalExpenses": {
                          "type": "number",
                          "example": 20000
                        },
                        "totalIncomes": {
                          "type": "number",
                          "example": 0
                        },
                        "monthBalance": {
                          "type": "number",
                          "example": -20000
                        },
                        "todayExpenses": {
                          "type": "number",
                          "example": 0
                        },
                        "weekExpenses": {
                          "type": "number",
                          "example": 0
                        },
                        "monthExpenses": {
                          "type": "number",
                          "example": 5000
                        }
                      },
                      "required": [
                        "totalExpenses"
                      ]
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": "Unexpected error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Returns a transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the transaction to get",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "A transaction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Invalid transaction ID"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Transaction not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Transactions"
        ],
        "description": "Update a transaction (any field can be updated)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the transaction to update",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Transaction successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTransactionDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Transaction not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTransactionDto"
              },
              "example": {
                "name": "Pago leña",
                "amount": 6000
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "description": "Deletes a transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Id of the transaction to delete",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Transaction successfully deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Transaction not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Transaction not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "description": "Returns your transactions",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (starts at 1)",
            "required": false,
            "example": 1,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of transactions per page",
            "required": false,
            "example": 8,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of your transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Transaction"
                          }
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "required": [
                        "data",
                        "hasNextPage"
                      ]
                    }
                  },
                  "required": [
                    "value"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Unexpected error"
                    }
                  },
                  "required": [
                    "error"
                  ]
                },
                "example": {
                  "error": "Unexpected error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "description": "Creates a new transaction for the authenticated user",
        "responses": {
          "201": {
            "description": "Transaction successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  },
                  "required": [
                    "value"
                  ]
                },
                "example": {
                  "value": {
                    "id": 1,
                    "name": "Pago luz",
                    "amount": 5000,
                    "date": "2025-08-31T12:00:00Z",
                    "category": "Servicios",
                    "paymentMethod": "Tarjeta",
                    "description": "Pago mensual de electricidad",
                    "type": "EXPENSE",
                    "userId": 1
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid transaction data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Amount must be greater than 0"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "error": "Unexpected error"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "amount",
                  "date",
                  "category",
                  "paymentMethod",
                  "description",
                  "type"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Pago luz"
                  },
                  "amount": {
                    "type": "number",
                    "example": 5000
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-31T12:00:00Z"
                  },
                  "category": {
                    "type": "string",
                    "example": "Servicios"
                  },
                  "paymentMethod": {
                    "type": "string",
                    "example": "Tarjeta"
                  },
                  "description": {
                    "type": "string",
                    "example": "Pago mensual de electricidad"
                  },
                  "type": {
                    "type": "string",
                    "example": "EXPENSE"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Pago luz"
          },
          "amount": {
            "type": "number",
            "example": 5000
          },
          "date": {
            "type": "string",
            "example": "2024-07-27T12:00:00Z"
          },
          "category": {
            "type": "string",
            "example": "Food"
          },
          "paymentMethod": {
            "type": "string",
            "example": "Cash"
          },
          "description": {
            "type": "string",
            "example": "Supermarket"
          },
          "type": {
            "type": "string",
            "example": "INCOME"
          }
        }
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "tu@email.com"
          },
          "password": {
            "type": "string",
            "example": "tuContraSEÑA123!"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Mabel"
          },
          "email": {
            "type": "string",
            "example": "mabel@example.com"
          }
        }
      },
      "UpdateTransactionDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Pago leña"
          },
          "amount": {
            "type": "number",
            "example": 6000
          },
          "date": {
            "type": "string",
            "example": "2025-08-31T12:00:00Z"
          },
          "category": {
            "type": "string",
            "example": "Servicios"
          },
          "paymentMethod": {
            "type": "string",
            "example": "Tarjeta"
          },
          "description": {
            "type": "string",
            "example": "Pago Agua actualizado"
          },
          "type": {
            "type": "string",
            "example": "EXPENSE"
          }
        }
      },
      "required": {
        "type": "array",
        "example": [],
        "items": {}
      }
    }
  }
}